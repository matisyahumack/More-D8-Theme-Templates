{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
<article id="node-{{ node.id }}" {{ attributes }}>
{% set node_id = node.id() %}
<div class="button expanded hollow large alert"><strong>Support ticket id: {{ node.id }}</strong></div>
<strong>Update status as necessary</strong>
{{ drupal_view('support_status_switch') }}
<table>
  <thead>
    <tr>
      <th width="150">Support Status</th>
      <th width="150">Support Type</th>
      <th width="150">Support Topic</th>
      <th width="150">Sender's Email</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        {% if 'Pending' in content.field_support_status[0] %}
          <span class="label warning">{{ content.field_support_status.0 }}</span>
        {% elseif 'Closed' in content.field_support_status[0] %}
          <span class="label secondary">{{ content.field_support_status.0 }}</span>
        {% elseif 'Open' in content.field_support_status[0] %}
          <span class="label alert">{{ content.field_support_status.0 }}</span>
        {% endif %}
      </td>
      <td>{{ content.field_support_type }}</td>
      <td>{{ content.field_support_topic }}</td>
      <td>{{ content.field_sender_s_email }}</td>
    </tr>
  </tbody>
</table>
<hr>
<div class="fieldset">
  <h4>Customer message and replies</h4>
  <div class="callout alert">
    <strong>Submitted by {{ author_name }} on {{ date }}</strong>
    {% if content.field_product_support|render is not empty %}
      <br/><strong>Product:</strong> {{ content.field_product_support }}
    {% endif %}
    {% if content.field_order_number|render is not empty %}
      <br/><strong>Order number:</strong><a href="/admin/commerce/orders?order_number={{ content.field_order_number.0 }}&state=All" target="blank"> {{ content.field_order_number }}</a>
    {% endif %}
    <strong>{{ content.field_sender_s_name.0 }} wrote:</strong>
    <p>{{ content.body }}</p>
  </div>
    {{ content.field_support_comments }}
    {% if content.field_tags|length and not is_front %}
      {{ content.field_tags }}
    {% endif %}
    {{ content.links }}
    {{ content.comment }}
  </div>
  <div class="fieldset">
    <h5>Internal notes</h5>
    {{ drupal_view('support_notes') }}
  </div>
  {% set node_id = node.id() %} 
  <a href="/customer-support/resolve/{{ node.id }}" class="button success large">Next</a>
</article>
